Bussiness:
using AutoMapper;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Reflection;
using WF.ERMT.Application.Core.Interfaces.Business;
using WF.ERMT.Application.Core.Interfaces.DataAccess;
using WF.ERMT.Application.DataAccess.UnitOfWork;
using WF.ERMT.Application.DataEntities.EntityFramework;
//using WF.ERMT.Application.DataEntities.DataEntities;
using WF.ERMT.Application.Entities.CustomEntities;
using System.Text;

namespace WF.ERMT.Application.Business
{
   public class SASearchBusiness :ISASearchBusiness
    {
        private readonly ISASearchDataAccess saSearchdataccess;
        private readonly IUnitOfWork unitOfWork;
        public SASearchBusiness(ISASearchDataAccess iaSearchdataccess, IUnitOfWork unitofwork)
        {
            this.saSearchdataccess = iaSearchdataccess;
            this.unitOfWork = unitofwork;
                
        } 
        public SearchDetailsViewModel GetGeneralInfoSearchDetails(SearchSAGeneralInfo searchDetails)
        {
            SearchDetailsViewModel result = new SearchDetailsViewModel();
            var item = saSearchdataccess.GetAllPepWithChildDetails();
 
            if (searchDetails.filter == "Contains")
            {
                if (searchDetails.SACaseID != 0)
                {
                    if (!string.IsNullOrWhiteSpace(Convert.ToString(searchDetails.SACaseID)))
                    {
                        item = item.Where(s => s.Case_Id.ToString().Contains(Convert.ToString(searchDetails.SACaseID)));
                    }
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.RequstedBy))
                {
                    item = item.Where(s => !string.IsNullOrWhiteSpace(s.Requested_By) && s.Requested_By.ToString().Contains(searchDetails.RequstedBy));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.AgentTIN))
                {
                    item = item.Where(s => s.Sub_Account_Agent_TIN_EIN != 0 && s.Sub_Account_Agent_TIN_EIN.ToString().Contains(searchDetails.AgentTIN));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.RequestNumber))
                {
                    item = item.Where(s => s.Request_Number != 0 && s.Request_Number.ToString().Contains(searchDetails.RequestNumber));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.SALegalName))
                {
                    item = item.Where(s => !string.IsNullOrWhiteSpace(s.Sub_Account_Agent_Legal_Name)  && s.Sub_Account_Agent_Legal_Name.ToString().Contains(searchDetails.SALegalName));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.RequstedDate))
                {
                    item = item.Where(s => s.Created_TS != null && s.Created_TS.ToString().Contains(searchDetails.RequstedDate));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.SAnumber))
                {
                    item = item.Where(s => s.Sub_Account_Number.ToString().Contains(searchDetails.SAnumber));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.MasterAccountName))
                {
                    item = item.Where(s => s.Sub_Account_Master_Account_Name.ToString().Contains(searchDetails.MasterAccountName));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.MasterAccountTIN))
                {
                    item = item.Where(s => s.Sub_Account_Master_Account_TIN.ToString().Contains(searchDetails.MasterAccountTIN));
                }
            }
            if (searchDetails.filter == "StartsWith")
            {
                if (searchDetails.SACaseID != 0)
                {
                    if (!string.IsNullOrWhiteSpace(Convert.ToString(searchDetails.SACaseID)))
                    {
                        item = item.Where(s => s.Case_Id.ToString().StartsWith(Convert.ToString(searchDetails.SACaseID)));
                    }
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.RequstedBy))
                {
                    item = item.Where(s => !string.IsNullOrWhiteSpace(s.Requested_By) && s.Requested_By.ToString().StartsWith(searchDetails.RequstedBy));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.AgentTIN))
                {
                    item = item.Where(s => s.Sub_Account_Agent_TIN_EIN != 0 && s.Sub_Account_Agent_TIN_EIN.ToString().StartsWith(searchDetails.AgentTIN));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.RequestNumber))
                {
                    item = item.Where(s => s.Request_Number != 0 && s.Request_Number.ToString().StartsWith(searchDetails.RequestNumber));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.SALegalName))
                {
                    item = item.Where(s => !string.IsNullOrWhiteSpace(s.Sub_Account_Agent_Legal_Name) && s.Sub_Account_Agent_Legal_Name.ToString().StartsWith(searchDetails.SALegalName));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.RequstedDate))
                {
                    item = item.Where(s => s.Created_TS != null && s.Created_TS.ToString().StartsWith(searchDetails.RequstedDate));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.SAnumber))
                {
                    item = item.Where(s => s.Sub_Account_Number.ToString().StartsWith(searchDetails.SAnumber));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.MasterAccountName))
                {
                    item = item.Where(s => s.Sub_Account_Master_Account_Name.ToString().StartsWith(searchDetails.MasterAccountName));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.MasterAccountTIN))
                {
                    item = item.Where(s => s.Sub_Account_Master_Account_TIN.ToString().StartsWith(searchDetails.MasterAccountTIN));
                }

            }
            if (searchDetails.filter == "EndsWith")
            {
                if (searchDetails.SACaseID != 0)
                {
                    if (!string.IsNullOrWhiteSpace(Convert.ToString(searchDetails.SACaseID)))
                    {
                        item = item.Where(s => s.Case_Id.ToString().EndsWith(Convert.ToString(searchDetails.SACaseID)));
                    }
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.RequstedBy))
                {
                    item = item.Where(s => !string.IsNullOrWhiteSpace(s.Requested_By) && s.Requested_By.ToString().EndsWith(searchDetails.RequstedBy));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.AgentTIN))
                {
                    item = item.Where(s => s.Sub_Account_Agent_TIN_EIN != 0 && s.Sub_Account_Agent_TIN_EIN.ToString().EndsWith(searchDetails.AgentTIN));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.RequestNumber))
                {
                    item = item.Where(s => s.Request_Number != 0 && s.Request_Number.ToString().EndsWith(searchDetails.RequestNumber));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.SALegalName))
                {
                    item = item.Where(s => !string.IsNullOrWhiteSpace(s.Sub_Account_Agent_Legal_Name) && s.Sub_Account_Agent_Legal_Name.ToString().EndsWith(searchDetails.SALegalName));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.RequstedDate))
                {
                    item = item.Where(s => s.Created_TS != null && s.Created_TS.ToString().EndsWith(searchDetails.RequstedDate));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.SAnumber))
                {
                    item = item.Where(s => s.Sub_Account_Number.ToString().EndsWith(searchDetails.SAnumber));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.MasterAccountName))
                {
                    item = item.Where(s => s.Sub_Account_Master_Account_Name.ToString().EndsWith(searchDetails.MasterAccountName));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.MasterAccountTIN))
                {
                    item = item.Where(s => s.Sub_Account_Master_Account_TIN.ToString().EndsWith(searchDetails.MasterAccountTIN));
                }

            }
            if (searchDetails.filter == "ExactMatch")
            {
                if (searchDetails.SACaseID != 0)
                {
                    if (!string.IsNullOrWhiteSpace(Convert.ToString(searchDetails.SACaseID)))
                    {
                        item = item.Where(s => s.Case_Id.ToString().Equals(Convert.ToString(searchDetails.SACaseID)));
                    }
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.RequstedBy))
                {
                    item = item.Where(s => !string.IsNullOrWhiteSpace(s.Requested_By) && s.Requested_By.ToString().Equals(searchDetails.RequstedBy));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.AgentTIN))
                {
                    item = item.Where(s => s.Sub_Account_Agent_TIN_EIN != 0 && s.Sub_Account_Agent_TIN_EIN.ToString().Equals(searchDetails.AgentTIN));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.RequestNumber))
                {
                    item = item.Where(s => s.Request_Number != 0 && s.Request_Number.ToString().Equals(searchDetails.RequestNumber));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.SALegalName))
                {
                    item = item.Where(s => !string.IsNullOrWhiteSpace(s.Sub_Account_Agent_Legal_Name) && s.Sub_Account_Agent_Legal_Name.ToString().Equals(searchDetails.SALegalName));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.RequstedDate))
                {
                    item = item.Where(s => s.Created_TS != null && s.Created_TS.ToString().Equals(searchDetails.RequstedDate));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.SAnumber))
                {
                    item = item.Where(s => s.Sub_Account_Number.ToString().Equals(searchDetails.SAnumber));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.MasterAccountName))
                {
                    item = item.Where(s => s.Sub_Account_Master_Account_Name.ToString().Equals(searchDetails.MasterAccountName));
                }
                if (!string.IsNullOrWhiteSpace(searchDetails.MasterAccountTIN))
                {
                    item = item.Where(s => s.Sub_Account_Master_Account_TIN.ToString().Equals(searchDetails.MasterAccountTIN));
                }

            }
 
            var GIDetails = Mapper.Map<IEnumerable<CDDGSAGeneralInfo>, IEnumerable<DisplayListViewModel>>(item);
              
            DisplayPepInformationListViewModel searchResults = new DisplayPepInformationListViewModel();
            searchResults.PepList = GIDetails.ToList();
            searchResults.HeaderInfo = "Search Results";

            result.SearchResult = searchResults;
 

            return result;
        }
    }
}

Core->WF.ERMT.Application.Core.Interfaces -> Business:

using System.Collections.Generic;
using WF.ERMT.Application.Entities.CustomEntities;

namespace WF.ERMT.Application.Core.Interfaces.Business
{
    public interface ISASearchBusiness
    {
        SearchDetailsViewModel GetGeneralInfoSearchDetails(SearchSAGeneralInfo searchDetails);
    }
}

Core->WF.ERMT.Application.Core.Interfaces -> Business->DataAccess :

using System.Collections.Generic;
using WF.ERMT.Application.DataEntities.EntityFramework;

namespace WF.ERMT.Application.Core.Interfaces.DataAccess
{
    public interface ISASearchDataAccess  : IBaseDataAccess<CDDGSAGeneralInfo>
    {
        IEnumerable<CDDGSAGeneralInfo> GetAllPepWithChildDetails();
    }
}

DataAccess->WF.ERMT.Application.DataAccess->ConcreteClasses:
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using WF.ERMT.Application.DataAccess.Helpers;
using System.Data;
using WF.ERMT.Application.Core.Interfaces.DataAccess;
using WF.ERMT.Application.DataEntities.EntityFramework;
using WF.ERMT.Application.Core.Interfaces.Utilities;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Infrastructure;
using System.Data.Entity.Migrations;
using WF.ERMT.Application.DataAccess.SqlHelpers;
using System.Data.SqlClient;
namespace WF.ERMT.Application.DataAccess.ConcreteClasses
{
    public class SASearchDataAccess : BaseDataAccess<CDDGSAGeneralInfo>, ISASearchDataAccess
    {
        public SASearchDataAccess(IDbFactory dbFactory) : base(dbFactory) { }

        public IEnumerable<CDDGSAGeneralInfo> GetAllPepWithChildDetails()
        {
            DataSet ds=new DataSet();
            using (SqlHelper objhelper = new SqlHelper())
            { 
                ds= objhelper.ExecDataSet("select * from CDDGSAGeneralInfo");
                
            }
            var result = SqlHelper.ConvertDataTable<CDDGSAGeneralInfo>(ds.Tables[0]);
            return result;
        }
    }
}

Entities->WF.ERMT.Application.CustomEntities->CustomEntities:

Replace DashBoardViewModel with below code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


namespace WF.ERMT.Application.Entities.CustomEntities
{
    public class DashBoardViewModel
    {
       
        public List<consultantWisePepListViewModel> consultantWisePendingRequests { get; set; }
        public int consultantWisePendingRequestsCount { get; set; }
        public List<consultantWisePepListViewModel> consultantWiseCRRequests { get; set; }
        public int consultantWiseCRRequestsCount { get; set; }
        public List<consultantWisePepListViewModel> consultantWiseSLARequests { get; set; }
        public int consultantWiseSLARequestsCount { get; set; }
        public DisplayPepInformationListViewModel UserPendingRequests { get; set; }
        public DisplayPepInformationListViewModel UserCRRequests { get; set; }
        public DisplayPepInformationListViewModel UserSLARequests { get; set; }
        public List<consultantWisePepListViewModel> consultantWiseRejectedRequests { get; set; }
        public int consultantWiseRejectedRequestsCount { get; set; }
        public DisplayPepInformationListViewModel UserRejectedRequests { get; set; }
    }

    public class DisplayPepInformationListViewModel
    {
        public string HeaderInfo { get; set; }
        public IEnumerable<DisplayListViewModel> PepList { get; set; }

    }



    public class DisplayListViewModel
    {
        public int Case_Id { get; set; }

        public int Request_Number { get; set; }
        public int Master_Account { get; set; }
        public string Sub_Account_Master_Account_Name { get; set; }
        public string Sub_Account_Master_Account_TIN { get; set; }
        public int Company_Entity_ID { get; set; }
        public int Sub_Account_Number { get; set; }
        public string Name_on_Sub_Account { get; set; }
        public string Agent_Code { get; set; }
        public string BranchAccount { get; set; }
        public string Sub_AccountStatus { get; set; }
        public string Sub_AccountClosure { get; set; }
        public string Sub_Account_Agent_Legal_Name { get; set; }
        public DateTime CreatedTS { get; set; }

    }

    public class consultantWisePepListViewModel
    {
        public string consultantName { get; set; }
        public int consultantId { get; set; }
        public List<DisplayListViewModel> Requests { get; set; }
        public int requestCount { get; set; }
        public string headerMessage { get; set; }
    }

    public class SearchDetailsViewModel
    {
        public DisplayPepInformationListViewModel SearchResult { get; set; }


        public SearchSAGeneralInfo SearchCriteria { get; set; }
    }
}


Web->WF.ERMT.Application.Web:
Replace SASearchController with below code:
using System;
using System.Web;
using System.Web.Mvc;
using System.Configuration;
using WF.ERMT.Application.Entities;
using WF.ERMT.Application.Services.UserDetails;
using WF.ERMT.Application.Core.Logging.EntLibLogging.Logger;
using WF.ERMT.Application.Configurations.CommonConfig.Configurations;
using System.Collections.Generic;
using System.Linq;
using WF.ERMT.Application.Services.SASearch;
using Microsoft.Reporting.WebForms;
using System.Web.UI.WebControls;
using WF.ERMT.Application.Web.CustomFiltersAttributes;
using WF.ERMT.Application.Entities.CustomEntities;
using Autofac;
using WF.ERMT.Application.Web.Models;
using Newtonsoft.Json;
using System.IO;

namespace WF.ERMT.Application.Web.Controllers
{
    public class SASearchController : Controller
    {
        //
        // GET: /SASearch/
        #region Initialization
        private readonly SASearch _SAservice;
        private readonly UserDetails _userservice;
        public SASearchController(SASearch saservice, UserDetails userservice)
        {
            this._SAservice = saservice;
            this._userservice = userservice;
        }
        #endregion
  
        public ActionResult GeneralInfoSearchForm(string typeofSearch)
        {
            ViewBag.isSearch = false;
            ViewBag.isValidationError = false;
            SearchDetailsViewModel searchDetails = new SearchDetailsViewModel();
            searchDetails.SearchCriteria = new SearchSAGeneralInfo();
            searchDetails.SearchCriteria.typeofSearch = typeofSearch;
            searchDetails.SearchResult = new DisplayPepInformationListViewModel();
            searchDetails.SearchResult.PepList = new List<DisplayListViewModel>();
            return View(searchDetails);

        }
        [HttpPost]
        [CustomActionLoggingFilter]
        public ActionResult GeneralInfoSearchForm(SearchSAGeneralInfo searchCriteria)
        {
            string typeOfSearch = searchCriteria.typeofSearch;
            var userId = (string)Session["userId"];
            searchCriteria.userid = userId;
            if (searchCriteria.SACaseID != 0 || !string.IsNullOrWhiteSpace(searchCriteria.RequstedBy) ||
                !string.IsNullOrWhiteSpace(searchCriteria.AgentTIN) || !string.IsNullOrWhiteSpace(searchCriteria.RequestNumber)
                || !string.IsNullOrWhiteSpace(searchCriteria.SALegalName) || !string.IsNullOrWhiteSpace(searchCriteria.RequstedDate)
                || !string.IsNullOrWhiteSpace(searchCriteria.MasterAccountName)
                || !string.IsNullOrWhiteSpace(searchCriteria.SAnumber)
                || !string.IsNullOrWhiteSpace(searchCriteria.MasterAccountTIN))
            {
                var item = _SAservice.GetPEPSearchDetails(searchCriteria);
                if (item.SearchResult.PepList.Count() > 0)
                {
                    //if (searchCriteria.filter == "ExactMatch")
                    //{
                    //    if (item.SearchResult.PepList.Count() == 1)
                    //    {
                    //        int pepid = item.SearchResult.PepList.Select(i => i.PepId).FirstOrDefault();
                    //        if (Session["SelectedRole"].ToString() == "LOB - Line of Business(PEP)")
                    //        {
                    //            return RedirectToAction("GetPEPDeterminationForm", new { pepid = pepid });
                    //        }
                    //        else
                    //        {
                    //            return RedirectToAction("GetPEPDeterminationSearchFormForApproval", new { pepid = pepid });
                    //        }
                    //    }
                    //}
                    ViewBag.isSearch = true;
                    ViewBag.isValidationError = false;
                    item.SearchCriteria = searchCriteria;
                    return View("GeneralInfoSearchForm", item);
                }

                else
                {
                    ViewBag.isSearch = true;
                    ViewBag.isValidationError = false;
                    SearchDetailsViewModel searchDetails = new SearchDetailsViewModel();
                    searchDetails.SearchCriteria = searchCriteria;
                    searchDetails.SearchResult = new DisplayPepInformationListViewModel();
                    searchDetails.SearchResult.PepList = new List<DisplayListViewModel>();
                    ModelState.AddModelError("Error", "No Search Results found.");
                    return View("GeneralInfoSearchForm", searchDetails);
                }
            }
            else
            {
                ViewBag.isValidationError = true;
                ViewBag.isSearch = false;
                SearchDetailsViewModel searchDetails = new SearchDetailsViewModel();
                searchDetails.SearchCriteria = searchCriteria;
                searchDetails.SearchResult = new DisplayPepInformationListViewModel();
                searchDetails.SearchResult.PepList = new List<DisplayListViewModel>();
                ModelState.AddModelError("ValidationError", "Please enter a value in any field");
                return View("GeneralInfoSearchForm", searchDetails);
            }
        }

    }
}

Views->SASearch:
Create GeneralInfoSearchForm.cshtml View and copy below code:
 
@model WF.ERMT.Application.Entities.CustomEntities.SearchDetailsViewModel
@{
    ViewBag.Title = "PEPDeterminationSearchForm";
    Layout = "~/Views/Shared/layout.cshtml";
    bool issearch= ViewBag.isSearch;
    bool isValidationError = ViewBag.isValidationError;
    string typeofSearch= ViewBag.typeofSearch ;
}

<link href="~/AdminLTE/plugins/font-awesome/css/font-awesome.min.css" rel="stylesheet" />
<link href="~/AdminLTE/plugins/ionicons/css/ionicons.css" rel="stylesheet" />
<link href="~/AdminLTE/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
<link href="~/AdminLTE/dist/css/admin-lte.min.css" rel="stylesheet" />
<link href="~/AdminLTE/dist/css/skins/_all-skins.min.css" rel="stylesheet" />
 
<script src="~/AdminLTE/plugins/datatables/js/jquery.dataTables.min.js"></script>
<script src="~/AdminLTE/plugins/datatables/js/dataTables.bootstrap.min.js"></script>


 
        <div class="container-fluid">
            <div class="row">
                @*<div class="col-lg-2 col-md-2">*@
              <div style="float:left;">
                    @Html.Partial("PEPLeftMenu")
                </div>
                <div class="col-lg-9 col-md-9">
                    <h4 class="ms-core-pageTitle"></h4>
                    <br />
                    <form action='@Url.Action("GeneralInfoSearchForm", "SASearch")' method="post">
                        <div class="panel panel-default panel-group">
                            <div class="panel-heading">
                                <div class="panel-title"><b>Search General Information</b></div>
                            </div>
                            <div class="panel-body">
                                <div class="row" style="padding-bottom:10px;">
                                    <div class="form-group">
                                        <div class="col-xs-2">
                                            <label for="PepID" class="control-label">Requested By</label>
                                        </div>
                                        <div class="col-xs-4">
                                            <input type="text" class="form-control input-sm input-normal" id="pepid" name="RequestedBY" value='{@Model.SearchCriteria.RequstedBy }' />
                                        </div>
                                        <div class="col-xs-2">
                                            <label for="entityid" class="control-label">Agent TIN EIN</label>
                                        </div>
                                        <div class="col-xs-4">
                                            <input type="text" class="form-control input-sm input-normal" id="AgentTIN" name="entity" value="@Model.SearchCriteria.AgentTIN" />
                                        </div>
                                    </div>
                                </div>
                                <div class="row" style="padding-bottom:10px;">
                                    <div class="form-group">
                                        <div class="col-xs-2">
                                            <label for="ecnid" class="control-label">Requester Number</label>
                                        </div>
                                        <div class="col-xs-4">
                                            <input type="text" class="form-control input-normal input-sm" id="RequestNumber" name="ecn" value="@Model.SearchCriteria.RequestNumber" />
                                        </div>
                                        <div class="col-xs-2">
                                            <label for="primarypepid" class="control-label">SubAccount legal Name</label>
                                        </div>
                                        <div class="col-xs-4">
                                            <input type="text" class="form-control input-normal input-sm" id="SALegalName" name="primarypep" value="@Model.SearchCriteria.SALegalName" />
                                        </div>
                                    </div>
                                </div>
                                <div class="row" style="padding-bottom:10px;">
                                    <div class="form-group">
                                        <div class="col-xs-2">
                                            <label for="customernameid" class="control-label">Requested Date</label>
                                        </div>
                                        <div class="col-xs-4">
                                            <input type="text" class="form-control input-normal input-sm" id="RequstedDate" name="customername" value="@Model.SearchCriteria.RequstedDate" />
                                        </div>
                                        <div class="col-xs-2">
                                            <label for="wcisid" class="control-label" style="display:block;font-weight:normal;background-color:White;color:Black;font-size:90%">SubAccount Number</label>
                                        </div>
                                        <div class="col-xs-4">
                                            <input type="text" class="form-control input-normal input-sm" id="SAnumber" name="wcis"   value="@Model.SearchCriteria.SAnumber" />
                                        </div>
                                    </div>
                                </div>
                                 <div class="row" style="padding-bottom:10px;">
                                    <div class="form-group">
                                        <div class="col-xs-2">
                                            <label for="ecnid" class="control-label">Master Account Name</label>
                                        </div>
                                        <div class="col-xs-4">
                                            <input type="text" class="form-control input-normal input-sm" id="MasterAccountName" name="ecn" value="@Model.SearchCriteria.MasterAccountName" />
                                        </div>
                                        <div class="col-xs-2">
                                            <label for="primarypepid" class="control-label">SubAccount Case ID</label>
                                        </div>
                                        <div class="col-xs-4">
                                            <input type="text" class="form-control input-normal input-sm" id="SACaseID" name="primarypep" value="@Model.SearchCriteria.SACaseID" />
                                        </div>
                                    </div>
                                </div>
                                  <div class="row" style="padding-bottom:10px;">
                                    <div class="form-group">
                                        <div class="col-xs-2">
                                            <label for="ecnid" class="control-label">Master Account TIN</label>
                                        </div>
                                        <div class="col-xs-4">
                                            <input type="text" class="form-control input-normal input-sm" id="MasterAccountTIN" name="ecn" value="@Model.SearchCriteria.MasterAccountTIN" />
                                        </div>
                                        
                                    </div>
                                </div>
                                <div class="row" style="padding-bottom:10px;">
                                    <div class="form-group">
                                        <div class="col-xs-2">
                                            <label for="filter" class="control-label">Filter</label>
                                        </div>
                                        <div class="col-xs-4">
                                            @Html.DropDownList("filter", new List<SelectListItem>
            {
                                new SelectListItem() {Text = "Exact Match", Value="ExactMatch"},
                                new SelectListItem() {Text = "Contains", Value="Contains", Selected=true},
                                new SelectListItem() {Text = "Starts With", Value="StartsWith"},
                                new SelectListItem() {Text = "Ends With", Value="EndsWith"}

            }, new { @class = "form-control", name = "filter"})
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div style="margin:10px">
                                <div class="row" align="right" style="padding-right:20px;">
                                    <input type="submit" class="btn btn-primary" style="padding-right:10px;padding-left:10px" id="SearchPEP" value="Search" />
                                    <span>&nbsp;&nbsp;&nbsp;</span>
                                    <input type="button" class="btn btn-primary" style="padding-right:10px;padding-left:10px;" id="homeForm" value="Cancel" />
                                </div>
                            </div>
                        </div>
                    </form>


                    @if (Model != null)
                    {
                        if (issearch)
                        {
                            if (Model.SearchResult.PepList.Count() > 0)
                            {

                                <br />
                                <div id="nav" style="float:right;font-family:Verdana;padding-right:19px"></div>
                                <div class="col-lg-2" style="width: 100%;font-family:Verdana">

                                    @Html.Partial("_DisplayGeneralInfoList", Model.SearchResult, new ViewDataDictionary { { "id", "1" } })

                                </div>
                            }

                            else
                            {
                                <div class="col-lg-4">
                                    @Html.ValidationMessage("Error")
                                    @Html.ActionLink("Create New PEP Request", "PEPDeterminationForm", "PEPDetails", new { @class = "blueunderlinedlink" })<br />
                                </div>
                            }
                        }
                    }

                    @if (isValidationError)
                    {
                        <div class="col-lg-4">
                            @Html.ValidationMessage("ValidationError", new { style = "font-size:14px; color:red" })
                        </div>

                    }
                </div>
                <div class="col-lg-1 col-md-1"></div>
             </div>
</div>
<script type="text/javascript">
  
    $("#homeForm").on("click", function (ev) {
        ev.preventDefault();
        window.location.href = window.rootUrl + "PEPDetails/LOBDasboardPage";

    });


</script>

Create _DisplayGeneralInfoList.cshtml Partial View and copy below code:
@model WF.ERMT.Application.Entities.CustomEntities.DisplayPepInformationListViewModel

    <div class="row col-lg-12">
       
      
                <div class="box-title" style="font-family:Verdana">
                   @Model.HeaderInfo 
                </div>
                
                <div class="box-body " style="font-family:Verdana;font-size:smaller">
                    
                    <table   id="@ViewData["id"]" class="table table-bordered table-hover table-striped">
                        <thead style="font-weight:bold; background-color:#337ab7;color:white">
                            <tr>
                                <th class="sorting_asc">Case ID</th>
                                <th class="sorting_asc"  tabindex="0" aria-controls="example2" rowspan="1" colspan="1" aria-label="Rendering engine: activate to sort column descending" aria-sort="ascending">Requster Number</th>
                                <th class="sorting_asc" tabindex="0" aria-controls="example2" rowspan="1" colspan="1" aria-label="Rendering engine: activate to sort column descending" aria-sort="ascending">Master Account</th>
                                <th class="sorting_asc" tabindex="0" aria-controls="example2" rowspan="1" colspan="1" aria-label="Rendering engine: activate to sort column descending" aria-sort="ascending">SA Account Name</th>
                                  <th class="sorting_asc" tabindex="0" aria-controls="example2" rowspan="1" colspan="1" aria-label="Rendering engine: activate to sort column descending" aria-sort="ascending">SA Account TIN</th>
                                <th class="sorting_asc" tabindex="0" aria-controls="example2" rowspan="1" colspan="1" aria-label="Rendering engine: activate to sort column descending" aria-sort="ascending">Sub Account Number</th>
                                <th class="sorting_asc" tabindex="0" aria-controls="example2" rowspan="1" colspan="1" aria-label="Rendering engine: activate to sort column descending" aria-sort="ascending">Sub Account Status</th>
                                  <th class="sorting_asc" tabindex="0" aria-controls="example2" rowspan="1" colspan="1" aria-label="Rendering engine: activate to sort column descending" aria-sort="ascending">Submitted Date</th>
 
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var item in Model.PepList)
                            {
                                <tr>
                                    <td>
                                        <a href="#" id="icon1" title="Go to PEP details" style="color:Blue !important"  @if (HttpContext.Current.Session["SelectedRole"].ToString() == "LOB - Line of Business(PEP)") { @Html.Raw("onclick='GetPEPDeterminationFormExist(this)'")} else { @Html.Raw("onclick='GetPEPDeterminationFormExistForCPTUser(this)'")}>
                                        @item.Case_Id
                                        </a>
                                    </td>
                                    <td>
                                        @item.Request_Number
                                    </td>
                                    <td>
                                         @item.Master_Account
                                    </td>
                                    <td>
                                        @item.Sub_Account_Master_Account_Name
                                    </td>
                                  
                                    <td>
                                        @item.Sub_Account_Master_Account_TIN
                                    </td>
                                    <td>
                                        @item.Sub_Account_Number
                                    </td>
                                    <td>
                                        @item.Sub_AccountStatus
                                    </td>
                                    <td>
                                          
                                        @item.CreatedTS
                                       
                                    </td>
                                    
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

       

    </div>



    <script type="text/javascript">


        function GetPEPDeterminationFormExistForCPTUser(e)
        {
            event.preventDefault();
            var pepid = e.innerHTML.toString().trim();
            var url = window.rootUrl + "PEPDetails/GetPEPDeterminationSearchFormForApproval?pepid=" + pepid;
            window.location.href = url;
        }


        function GetPEPDeterminationFormExist(e) {
            event.preventDefault();
            var pepid = e.innerHTML.toString().trim();
        
            var url = window.rootUrl + "PEPDetails/GetPEPDeterminationForm?pepid=" + pepid;
                window.location.href = url;
        }


        $(document).ready(function () {

            $('#1').DataTable();
            $('#2').DataTable();
            $('#3').DataTable();
            $('#4').DataTable();
        });

    </script>





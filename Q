USE [CDDG]
GO
/****** Object:  StoredProcedure [dbo].[History_Log]    Script Date: 8/23/2017 10:16:37 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER Procedure [dbo].[History_Log] (@PepId_HistLog Int)
as
Begin
create table #result
(pepid int,ChangeNo varchar(32),UserName varchar(150),ChangedFields varchar(500),ChangedValue varchar(500),DateofChange datetime)

declare get_changes cursor for
select 'ChangeRequest' change_type,cr.ChangeRequestId,cr.CrNo,
       cr.ChangedFields,cr.CreatedTS,
       ISNULL(guser.FirstName,'') + ' ' + ISNULL(guser.LastName,'') as UserName,
       null,null,null,null,null,
       null,null
from CDDGChangeRequest cr
left join CDDGUser guser
on guser.LanId = cr.CreatedBy  
where PepId = @PepId_HistLog 
  and len(ChangedFields) > 0
  and cr.PepRequestStatusID in (2,4)
union
select 'PrimaryPep' change_type,cr.ChangeRequestId,cr.CrNo,
       pp.ChangedColumns ChangedFields,cr.CreatedTS,
       ISNULL(guser.FirstName,'') + ' ' + ISNULL(guser.LastName,'') as UserName,
       pp.FirstName,pp.MiddleName,pp.LastName,pp.AKAName,pp.PreviousPrimaryPepId,
       null,null
from CDDGPrimaryPep pp
right join CDDGChangeRequest cr
on cr.ChangeRequestId = pp.ChangeRequestId
and cr.PepRequestStatusID in (2,4)
left join CDDGUser guser
on guser.LanId = cr.CreatedBy  
where pp.PepId = @PepId_HistLog
  and pp.ChangeRequestId is not null
union
select 'ECN' change_type,cr.ChangeRequestID,cr.CrNo,
       null ChangedFields,e.CreatedTS,
       ISNULL(guser.FirstName,'') + ' ' + ISNULL(guser.LastName,'') as UserName,
       null,null,null,null,null,
       Ecn,EcnSeqVal
from CDDGECN e
right join CDDGChangeRequest cr
on cr.ChangeRequestId = e.ChangeRequestId
and cr.PepRequestStatusID in (2,4)
left join CDDGUser guser
on guser.LanId = cr.CreatedBy  
where e.PepId = @PepId_HistLog
  and e.ChangeRequestId is not null 

ã€€
declare @change_type varchar(16), @cr_id int, @cr_no int, @changed_fields varchar(max), 
        @changed_field_name varchar(50), @changed_field_value varchar(500),
        @n_cf_index_start int = 1, @n_cf_index_end int = 1,
        @SQLString nvarchar(500),@ParmDefinition nvarchar(500),
        @Updated_TS datetime, @UserName varchar(500),
        @ppFirstName varchar(255),@ppMiddleName varchar(255),@ppLastName varchar(255),
        @ppLastName2 varchar(255),@ppAKAName varchar(255),@ppPreviousPrimary int,
        @Ecn varchar(255),@EcnSeqVal varchar(255),@ecn_updated int

open get_changes

fetch next from get_changes into @change_type, @cr_id, @cr_no, @changed_fields, @Updated_TS, @UserName,
                                 @ppFirstName,@ppMiddleName,@ppLastName,@ppAKAName,@ppPreviousPrimary,
                                 @Ecn,@EcnSeqVal

while (@@FETCH_STATUS=0)
begin

  set @n_cf_index_start = 1
  set @changed_fields = @changed_fields + ','

  select @n_cf_index_end = charindex(',',@changed_fields,@n_cf_index_start)

  while (@n_cf_index_end > 0)
  begin

    select @changed_field_name = substring(@changed_fields,@n_cf_index_start,(@n_cf_index_end - @n_cf_index_start))

    if (@change_type = 'ChangeRequest' and @changed_field_name = 'CustomerId')
      set @SQLString = N'select @value_OUT=CustomerName ' +
                       'from CDDGCustomer c, CDDGChangeRequest cr where cr.PepId = @PepId ' +
                       ' and cr.ChangeRequestId = ' + convert(varchar(25),@cr_id) +
                       ' and c.CustomerID = cr.CustomerId'

    else if (@change_type = 'ChangeRequest' and @changed_field_name = 'PepRequestStatusId')
      set @SQLString = N'select @value_OUT=StatusName ' +
                       'from CDDGPEPRequestStatus rs, CDDGChangeRequest cr where cr.PepId = @PepId ' +
                       ' and cr.ChangeRequestId = ' + convert(varchar(25),@cr_id) +
                       ' and rs.PepRequestStatusID = cr.PepRequestStatusID'

    else if (@change_type = 'ChangeRequest' and @changed_field_name = 'PreviousPepRequestStatusid')
      set @SQLString = N'select @value_OUT=StatusName ' +
                       'from CDDGPEPRequestStatus rs, CDDGChangeRequest cr where cr.PepId = @PepId ' +
                       ' and cr.ChangeRequestId = ' + convert(varchar(25),@cr_id) +
                       ' and rs.PepRequestStatusID = cr.PreviousPepRequestStatusid'

    else if (@change_type = 'ChangeRequest')
      set @SQLString = N'select @value_OUT=convert(varchar(500),' + @changed_field_name + ') ' +
	              'from dbo.CDDGChangeRequest where PepId = @PepId ' + 
	              ' and ChangeRequestId = ' + convert(varchar(25),@cr_id)

    else if (@change_type = 'PrimaryPep')
      set @SQLString = N'select @value_OUT=convert(varchar(500),' + @changed_field_name + ') ' +
	              'from dbo.CDDGPrimaryPep where PepId = @PepId ' + 
                      '   and ChangeRequestId = ' + convert(varchar(25),@cr_id) +
                      '   and ChangedColumns like ''%' + @changed_field_name + '%'''
	   
    set @ParmDefinition = N'@PepId int,@value_OUT varchar(100) OUTPUT'

    begin try

       execute sp_executesql @SQLString, @ParmDefinition,@PepId=@PepId_HistLog,@value_OUT=@changed_field_value OUTPUT

       if (@change_type = 'PrimaryPep')
          set @changed_field_name = 'Primary Pep ' + @changed_field_name

       insert into #result(pepid,ChangeNo,UserName,ChangedFields,ChangedValue,DateofChange)values
       (@PepId_HistLog,convert(varchar(10),@cr_id) +' - ' + convert(varchar(10),@cr_no),
        @UserName,@changed_field_name,@changed_field_value,@Updated_TS)
  
    end try
    begin catch
       
    end catch
 
    set @n_cf_index_start = @n_cf_index_end + 1
  
    select @n_cf_index_end = charindex(',',@changed_fields,@n_cf_index_start)
  end

  if (@change_type = 'PrimaryPep' and ISNULL(@changed_fields,',')=',')
  begin
     
     if (@ppPreviousPrimary is null)
       set @changed_field_name = 'Primary Pep added'
     else
       set @changed_field_name = 'Primary Pep updated'

     set @changed_field_value = ISNULL(@ppFirstName,'') + ' '  + ISNULL(@ppMiddleName,'') + ISNULL(@ppLastName,'')

     if len(@ppAKAName) > 0
       set @changed_field_value = @changed_field_value + ', AKA ' + @ppAKAName

    
     insert into #result(pepid,ChangeNo,UserName,ChangedFields,ChangedValue,DateofChange)values
     (@PepId_HistLog,convert(varchar(10),@cr_id) +' - ' + convert(varchar(10),@cr_no),
      @UserName,@changed_field_name,@changed_field_value,@Updated_TS)

  end

  if (@change_type = 'ECN' and ISNULL(@changed_fields,',')=',')
  begin

     select @ecn_updated=count(0) 
     from CDDGEcn 
     where PepId = @PepId_HistLog
	   and EcnSeqVal = @EcnSeqVal 
       and EndDate is not null
       and CreatedTS < @Updated_TS

     if @ecn_updated > 0 
       set @changed_field_name = 'ECN Updated'
     else
       set @changed_field_name = 'ECN Added'

     set @changed_field_value = @Ecn

     insert into #result(pepid,ChangeNo,UserName,ChangedFields,ChangedValue,DateofChange)values
     (@PepId_HistLog,convert(varchar(10),@cr_id) +' - ' + convert(varchar(10),@cr_no),
      @UserName,@changed_field_name,@changed_field_value,@Updated_TS)

  end

  fetch next from get_changes 
    into @change_type, @cr_id, @cr_no, @changed_fields, @Updated_TS, @UserName,
         @ppFirstName,@ppMiddleName,@ppLastName,@ppAKAName,@ppPreviousPrimary,
         @Ecn,@EcnSeqVal

end
close get_changes
deallocate get_changes

select * from #result
order by DateofChange
drop table #result
end
